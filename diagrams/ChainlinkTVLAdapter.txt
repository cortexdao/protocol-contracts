title Chainlink TVL Adapter

participant ChainlinkNode#lightblue
participant TVLManager#pink
participant ERC20#yellow
participant CortexPeripheryContract
participant DeFiProtocol
database PriceFeed-1#lightgray
database PriceFeed-2#lightgray
database PriceFeed-3#lightgray
participant FluxAggregator#lightblue

ChainlinkNode -> TVLManager: getAssetAllocationIds()

//Loop through Ids to price
loop#lightblue Loop over Allocation Ids
activate ChainlinkNode
ChainlinkNode ->TVLManager: symbolOf(id)
ChainlinkNode ->TVLManager: decimalsOf(id)
ChainlinkNode ->TVLManager: balanceOf(id)
activate TVLManager
alt #yellow Protocol
TVLManager -> ERC20: balanceOf(account)
else Periphery
TVLManager -> CortexPeripheryContract: balanceOf(account)
activate CortexPeripheryContract
CortexPeripheryContract ->DeFiProtocol: call() 
CortexPeripheryContract ->DeFiProtocol: call()
CortexPeripheryContract ->DeFiProtocol: call()
CortexPeripheryContract -->TVLManager:
deactivate CortexPeripheryContract
end
TVLManager -->ChainlinkNode:
deactivate TVLManager

// Price Asset
par#lightgreen PriceFeed-1
ChainlinkNode ->PriceFeed-1: look up price using symbol
thread PriceFeed-2
ChainlinkNode ->PriceFeed-2: look up price using symbol
thread PriceFeed-3
ChainlinkNode ->PriceFeed-3: look up price using symbol
end
end
abox over ChainlinkNode#Pink: Compute TVL
ChainlinkNode -> FluxAggregator: submit(TVL)
